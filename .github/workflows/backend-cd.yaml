name: MP Backend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

env:
  ECR_REPOSITORY: backend
  DOCKER_IMAGE_TAG: latest

jobs:
  LINT:
    uses: ./.github/workflows/backend-lint.yaml

  TEST:
    uses: ./.github/workflows/backend-test.yaml
    
  BUILD:
    name: Build and Push Docker image to Amazon ECR
    runs-on: ubuntu-latest
    needs: [LINT, TEST]
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: 3.10.15
      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v4.1.1
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: ${{ runner.os }}-pipenv-
      - name: Install pipenv
        run: pip install pipenv && pip install flake8
      - name: Install dependencies
        run: pipenv install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Build and Push docker image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.ECR_REGISTRY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_IMAGE_TAG .
          docker images
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_IMAGE_TAG
  DEPLOY:
    name: Deploy to AWS EKS
    runs-on: ubuntu-latest
    needs: [BUILD]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Update-kubeconfig
        run: aws eks update-kubeconfig --name cluster
      - name: Init env
        run: ./init.sh || true
        working-directory: ./setup
      - name: Kustomize edit set image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.ECR_REGISTRY }}
        run: kustomize edit set image backend=$ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_IMAGE_TAG
        working-directory: ./starter/backend/k8s
      - name: Kubectl apply
        run: kustomize build | kubectl apply -f -
        working-directory: ./starter/backend/k8s
