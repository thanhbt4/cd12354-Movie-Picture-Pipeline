name: MP Frontend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  ECR_REPOSITORY: frontend
  IMAGE_TAG: latest

jobs:
  LINT:
    uses: ./.github/workflows/frontend-lint.yaml

  TEST:
    uses: ./.github/workflows/frontend-test.yaml

  BUILD:
    name: Build and Push Docker image to AWS ECR and K8S
    runs-on: ubuntu-latest
    needs: [LINT, TEST]
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Setup NodeJS / Install dependencies
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 20.x
      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v4.1.1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
      - name: Build and Push docker image to AWS ECR
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
        run: |
          aws eks update-kubeconfig --name cluster
          export PUBLIC_URL=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}')
          echo $PUBLIC_URL
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg=REACT_APP_MOVIE_API_URL=http://$PUBLIC_URL .
          docker images
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  DEPLOY:
    name: Deploy to AWS K8S
    runs-on: ubuntu-latest
    needs: [BUILD]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name cluster
      - name: Run init.sh
        run:  ./init.sh || true
        working-directory: ./setup
      - name: Kustomize set image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: kustomize edit set image frontend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        working-directory: ./starter/frontend/k8s
      - name: K8S apply
        run: kustomize build | kubectl apply -f -
        working-directory: ./starter/frontend/k8s
